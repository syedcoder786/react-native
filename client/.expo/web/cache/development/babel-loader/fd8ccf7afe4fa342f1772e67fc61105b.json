{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\react-native\\\\client\\\\src\\\\components\\\\reviews\\\\Form.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect } from 'react-redux';\nimport { addReview, fetchReviews } from \"../../actions/reviewsActions\";\n\nvar Form = function (_Component) {\n  _inherits(Form, _Component);\n\n  var _super = _createSuper(Form);\n\n  function Form() {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: \"\",\n      review: \"\"\n    };\n\n    _this.onTextChange = function (name) {\n      return function (value) {\n        _this.setState(_defineProperty({}, name, value));\n\n        console.log(_this.state.name);\n      };\n    };\n\n    _this.onPress = function () {\n      var newreview = {\n        name: _this.state.name,\n        review: _this.state.review\n      };\n      console.log(newreview);\n\n      _this.props.addReview(newreview);\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.form,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Name\",\n        onChangeText: this.onTextChange(\"name\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Review\",\n        onChangeText: this.onTextChange(\"review\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        onPress: this.onPress,\n        title: \"Add Review\",\n        color: \"coral\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nvar styles = StyleSheet.create({\n  form: {\n    width: \"100%\",\n    height: 150,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#eee\"\n  },\n  input: {\n    width: '70%',\n    height: 38,\n    padding: 5,\n    borderBottomWidth: 1.5,\n    borderBottomColor: \"#ddd\",\n    marginBottom: 5\n  },\n  btn: {\n    width: \"70%\",\n    height: 35,\n    marginTop: 5\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    reviews: state.reviews.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addReview: addReview,\n  fetchReviews: fetchReviews\n})(Form);","map":{"version":3,"sources":["E:/react-native/client/src/components/reviews/Form.js"],"names":["React","Component","connect","addReview","fetchReviews","Form","state","name","review","onTextChange","value","setState","console","log","onPress","newreview","props","styles","form","input","btn","StyleSheet","create","width","height","alignItems","justifyContent","backgroundColor","padding","borderBottomWidth","borderBottomColor","marginBottom","marginTop","mapStateToProps","reviews","items"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,YAApB;;IAEMC,I;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAC,EADC;AAENC,MAAAA,MAAM,EAAC;AAFD,K;;UAKRC,Y,GAAe,UAACF,IAAD;AAAA,aAAU,UAACG,KAAD,EAAW;AAClC,cAAKC,QAAL,qBAAiBJ,IAAjB,EAAwBG,KAAxB;;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKP,KAAL,CAAWC,IAAvB;AACD,OAHc;AAAA,K;;UAIfO,O,GAAU,YAAM;AACd,UAAMC,SAAS,GAAG;AAChBR,QAAAA,IAAI,EAAC,MAAKD,KAAL,CAAWC,IADA;AAEhBC,QAAAA,MAAM,EAAC,MAAKF,KAAL,CAAWE;AAFF,OAAlB;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;;AAEA,YAAKC,KAAL,CAAWb,SAAX,CAAqBY,SAArB;AAED,K;;;;;;;WACC,kBAAQ;AACJ,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAED,MAAM,CAACE,KADlB;AAEI,QAAA,WAAW,EAAC,MAFhB;AAGI,QAAA,YAAY,EAAE,KAAKV,YAAL,CAAkB,MAAlB,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEQ,MAAM,CAACE,KADlB;AAEI,QAAA,WAAW,EAAC,QAFhB;AAGI,QAAA,YAAY,EAAE,KAAKV,YAAL,CAAkB,QAAlB,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAaI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEQ,MAAM,CAACG,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE,KAAKN,OADlB;AAEI,QAAA,KAAK,EAAC,YAFV;AAGI,QAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAbJ,CADJ;AAuBH;;;;EA7Ccb,S;;AAiDnB,IAAMgB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,cAAc,EAAE,QAJZ;AAKJC,IAAAA,eAAe,EAAE;AALb,GADyB;AAS/BR,EAAAA,KAAK,EAAE;AACLI,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLI,IAAAA,OAAO,EAAE,CAHJ;AAILC,IAAAA,iBAAiB,EAAE,GAJd;AAKLC,IAAAA,iBAAiB,EAAE,MALd;AAMLC,IAAAA,YAAY,EAAE;AANT,GATwB;AAiB/BX,EAAAA,GAAG,EAAE;AACHG,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,MAAM,EAAE,EAFL;AAGHQ,IAAAA,SAAS,EAAE;AAHR;AAjB0B,CAAlB,CAAf;;AAyBA,IAAMC,eAAe,GAAC,SAAhBA,eAAgB,CAAA3B,KAAK;AAAA,SAAG;AAC5B4B,IAAAA,OAAO,EAAC5B,KAAK,CAAC4B,OAAN,CAAcC;AADM,GAAH;AAAA,CAA3B;;AAIA,eAAejC,OAAO,CAAC+B,eAAD,EAAkB;AAAC9B,EAAAA,SAAS,EAATA,SAAD;AAAYC,EAAAA,YAAY,EAAZA;AAAZ,CAAlB,CAAP,CAAqDC,IAArD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, View, TextInput, Button } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { addReview, fetchReviews } from '../../actions/reviewsActions';\r\n\r\nclass Form extends Component {\r\n\r\n  state = {\r\n    name:\"\",\r\n    review:\"\"\r\n  }\r\n\r\n  onTextChange = (name) => (value) => {\r\n    this.setState({ [name]: value });\r\n    console.log(this.state.name)\r\n  };\r\n  onPress = () => {\r\n    const newreview = {\r\n      name:this.state.name,\r\n      review:this.state.review,\r\n    };\r\n    console.log(newreview)\r\n    // this.props.reviews.push(newreview)\r\n    this.props.addReview(newreview) \r\n    // this.props.fetchReviews()\r\n  }\r\n    render(){\r\n        return (\r\n            <View style={styles.form}>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Name'\r\n                    onChangeText={this.onTextChange(\"name\")}\r\n                    // name=\"rname\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Review'\r\n                    onChangeText={this.onTextChange(\"review\")}\r\n                    // name=\"review\"\r\n                />\r\n                <View style={styles.btn}>\r\n                <Button\r\n                    onPress={this.onPress}\r\n                    title='Add Review'\r\n                    color='coral'\r\n                />\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  form: {\r\n    width: \"100%\",\r\n    height: 150,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#eee\",\r\n    // marginTop: 2\r\n  },\r\n  input: {\r\n    width: '70%',\r\n    height: 38,\r\n    padding: 5,\r\n    borderBottomWidth: 1.5,\r\n    borderBottomColor: \"#ddd\",\r\n    marginBottom: 5\r\n  },\r\n  btn: {\r\n    width: \"70%\",\r\n    height: 35,\r\n    marginTop: 5,\r\n    // padding: 2,\r\n  }\r\n});\r\n\r\nconst mapStateToProps=state=>({\r\n  reviews:state.reviews.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, {addReview, fetchReviews} )(Form);\r\n// export default Form;\r\n"]},"metadata":{},"sourceType":"module"}