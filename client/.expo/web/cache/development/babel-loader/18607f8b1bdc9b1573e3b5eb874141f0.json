{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\react-native\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Router, Scene } from 'react-native-router-flux';\nimport Boxes from \"../Boxes\";\n\nvar Dashboard = function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, React.createElement(Scene, {\n        key: \"root\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, React.createElement(Scene, {\n        key: \"home\",\n        component: Boxes,\n        title: \"Boxes\",\n        initial: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["E:/react-native/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","Router","Scene","Boxes","Dashboard"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,0BAA9B;AAKA,OAAOC,KAAP;;IAEMC,S;;;;;;;;;;;;;WAEJ,kBAAS;AAEL,aAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAG,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAG,MAAb;AAAoB,QAAA,SAAS,EAAID,KAAjC;AAAwC,QAAA,KAAK,EAAG,OAAhD;AAAwD,QAAA,OAAO,EAAI,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ,CAFF;AAWD;;;;EAfmBH,S;;AAwBxB,eAAeI,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Router, Scene } from 'react-native-router-flux'\r\n// import { BrowserRouter,Route, Switch } from 'react-router-dom';\r\n// import About from '../About';\r\n// import Addvedio from '../Addvedio';\r\n// import Vedio from '../Vedio';\r\nimport Boxes from '../Boxes';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  render() {\r\n\r\n      return (\r\n\r\n        <Router>\r\n            <Scene key = \"root\">\r\n            <Scene key = \"home\" component = {Boxes} title = \"Boxes\" initial = {true} />\r\n            {/* <Scene key = \"about\" component = {About} title = \"About\" /> */}\r\n            </Scene>\r\n        </Router>\r\n                \r\n      )\r\n    \r\n    }\r\n}\r\n\r\n// const mapStateToProps=state=>({\r\n//     // posts:state.post.items,\r\n//     // postLoading:state.post.postLoading,\r\n//     auth:state.auth\r\n// });\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}