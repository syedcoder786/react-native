{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\react-native\\\\client\\\\src\\\\components\\\\reviews\\\\ShowReviews.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { connect } from 'react-redux';\nimport { fetchReviews } from \"../../actions/reviewsActions\";\n\nvar ShowReviews = function (_Component) {\n  _inherits(ShowReviews, _Component);\n\n  var _super = _createSuper(ShowReviews);\n\n  function ShowReviews() {\n    _classCallCheck(this, ShowReviews);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ShowReviews, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      this.props.fetchReviews();\n      setInterval(function () {\n        return _this.props.fetchReviews();\n      }, 2000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var reviewsItems = this.props.reviews.map(function (_ref) {\n        var _id = _ref._id,\n            name = _ref.name,\n            review = _ref.review;\n        return React.createElement(View, {\n          style: styles.review,\n          key: _id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.reviewReview,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }\n        }, review), React.createElement(Text, {\n          style: styles.reviewName,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }\n        }, \"-By \", name));\n      });\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.reviews,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.reviewsdiscp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, \"All Reviews\"), React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, this.props.reviewsLoading ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 44\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 50\n        }\n      }, \"Loading...\")) : reviewsItems)));\n    }\n  }]);\n\n  return ShowReviews;\n}(Component);\n\nvar styles = StyleSheet.create({\n  reviews: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 15\n  },\n  reviewsdiscp: {\n    padding: 5,\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  review: {\n    width: '80%',\n    padding: 8,\n    borderWidth: 1.5,\n    borderColor: \"#ddd\",\n    backgroundColor: '#eee',\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  reviewReview: {\n    fontSize: 18,\n    color: '#3D3C3A'\n  },\n  reviewName: {\n    fontSize: 15,\n    color: '#6D6968'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    reviews: state.reviews.items,\n    reviewsLoading: state.reviews.reviewsLoading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchReviews: fetchReviews\n})(ShowReviews);","map":{"version":3,"sources":["E:/react-native/client/src/components/reviews/ShowReviews.js"],"names":["React","Component","connect","fetchReviews","ShowReviews","props","setInterval","reviewsItems","reviews","map","_id","name","review","styles","reviewReview","reviewName","reviewsdiscp","reviewsLoading","StyleSheet","create","width","alignItems","justifyContent","marginTop","padding","fontSize","fontWeight","marginBottom","borderWidth","borderColor","backgroundColor","borderRadius","color","mapStateToProps","state","items"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, View, Text, ScrollView } from 'react-native';\r\nimport {connect} from 'react-redux';\r\nimport { fetchReviews } from '../../actions/reviewsActions';\r\n\r\nclass ShowReviews extends Component {\r\n\r\n    componentDidMount(){\r\n      this.props.fetchReviews()\r\n      setInterval(\r\n        () => this.props.fetchReviews(),\r\n        2000\r\n      );\r\n      }\r\n    // componentDidUpdate(prevProps){\r\n    //   const {reviews} = this.props;\r\n    //   this.props.fetchReviews();\r\n    //   console.log(\"kuch ni\")\r\n    //   if(reviews !== prevProps.reviews){\r\n    //     console.log(\"kuch toh hai\")\r\n    //     console.log(reviews)\r\n    //     // this.props.fetchReviews();\r\n    //   }\r\n    // }\r\n\r\n    render(){\r\n\r\n        const reviewsItems = this.props.reviews.map(({ _id, name, review }) => (\r\n        \r\n            <View style={styles.review} key={_id}>\r\n                    <Text style={styles.reviewReview}>{review}</Text>\r\n                    <Text style={styles.reviewName}>-By {name}</Text>\r\n            </View>\r\n          \r\n          ));\r\n\r\n        return (\r\n          <View>\r\n            \r\n            <View style={styles.reviews}>\r\n                <Text style={styles.reviewsdiscp}>\r\n                    All Reviews\r\n                </Text>\r\n                <ScrollView>\r\n                {this.props.reviewsLoading?<View><Text>Loading...</Text></View>:reviewsItems}\r\n                {/* <View style={styles.review}>\r\n                    <Text style={styles.reviewReview}>Review</Text>\r\n                    <Text style={styles.reviewName}>-By name</Text>\r\n                </View>\r\n                <View style={styles.review}>\r\n                    <Text style={styles.reviewReview}>Review</Text>\r\n                    <Text style={styles.reviewName}>-By name</Text>\r\n                </View> */}\r\n                </ScrollView>\r\n            </View>\r\n            \r\n            </View>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  reviews: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // backgroundColor: \"#eee\",\r\n    marginTop: 15\r\n  },\r\n  reviewsdiscp: {\r\n    // width: '70%',\r\n    padding: 5,\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5\r\n  },\r\n  review: {\r\n    width: '80%',\r\n    padding: 8,\r\n    // fontSize: 18,\r\n    borderWidth: 1.5,\r\n    borderColor: \"#ddd\",\r\n    backgroundColor: '#eee',\r\n    borderRadius: 10,\r\n    marginBottom: 10\r\n  },\r\n  reviewReview: {\r\n    fontSize: 18,\r\n    color: '#3D3C3A'\r\n  },\r\n  reviewName: {\r\n    fontSize: 15,\r\n    color: '#6D6968'\r\n  }\r\n});\r\n\r\nconst mapStateToProps=state=>({\r\n    reviews:state.reviews.items,\r\n    reviewsLoading:state.reviews.reviewsLoading\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchReviews })(ShowReviews);\r\n// export default ShowReviews;\r\n"]},"metadata":{},"sourceType":"module"}