{"ast":null,"code":"import { FETCH_REVIEWS, REVIEWS_LOADING, REVIEWS_LOADED, ADD_REVIEW, ERROR_REVIEW } from \"./types\";\nimport axios from 'axios';\nvar x = 0,\n    y;\nexport var fetchReviews = function fetchReviews() {\n  return function (dispatch) {\n    if (x === 0) {\n      dispatch({\n        type: REVIEWS_LOADING\n      });\n    }\n\n    axios.get('https://react-native-serverjs.herokuapp.com/api/fetchReviews').then(function (reviews) {\n      if (x === 0) {\n        dispatch({\n          type: REVIEWS_LOADED\n        });\n        dispatch({\n          type: FETCH_REVIEWS,\n          payload: reviews.data\n        });\n        x = 1;\n        y = reviews.data.length;\n      } else if (y !== reviews.data.length) {\n        console.log(y);\n        axios.get('https://react-native-serverjs.herokuapp.com/api/fetchReviews').then(function (reviews) {\n          dispatch({\n            type: FETCH_REVIEWS,\n            payload: reviews.data\n          });\n        });\n        y = reviews.data.length;\n      }\n    });\n  };\n};\nexport var addReview = function addReview(review) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_REVIEW\n    });\n    axios({\n      method: 'post',\n      url: 'https://react-native-serverjs.herokuapp.com/api/addReview',\n      data: review\n    }).then(function (review) {\n      console.log(review.data);\n    }).catch(function (error) {\n      dispatch({\n        type: ERROR_REVIEW,\n        payload: error.response.data\n      });\n      console.log(error.response.data);\n    });\n  };\n};","map":{"version":3,"sources":["E:/react-native/client/src/actions/reviewsActions.js"],"names":["FETCH_REVIEWS","REVIEWS_LOADING","REVIEWS_LOADED","ADD_REVIEW","ERROR_REVIEW","axios","x","y","fetchReviews","dispatch","type","get","then","reviews","payload","data","length","console","log","addReview","review","method","url","catch","error","response"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,UAAzD,EAAqEC,YAArE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,CAAC,GAAC,CAAN;AAAA,IAAQC,CAAR;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAC1C,QAAGH,CAAC,KAAG,CAAP,EAAS;AACPG,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAACT;AAAP,OAAD,CAAR;AACD;;AAGDI,IAAAA,KAAK,CAACM,GAAN,CAAU,8DAAV,EACGC,IADH,CACQ,UAAAC,OAAO,EAAI;AACf,UAAGP,CAAC,KAAG,CAAP,EAAS;AAELG,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAACR;AAAP,SAAD,CAAR;AACAO,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAACV,aADA;AAELc,UAAAA,OAAO,EAACD,OAAO,CAACE;AAFX,SAAD,CAAR;AAIAT,QAAAA,CAAC,GAAC,CAAF;AACAC,QAAAA,CAAC,GAACM,OAAO,CAACE,IAAR,CAAaC,MAAf;AACH,OATD,MASM,IAAGT,CAAC,KAAKM,OAAO,CAACE,IAAR,CAAaC,MAAtB,EAA6B;AACjCC,QAAAA,OAAO,CAACC,GAAR,CAAYX,CAAZ;AAEQF,QAAAA,KAAK,CAACM,GAAN,CAAU,8DAAV,EACGC,IADH,CACQ,UAAAC,OAAO,EAAI;AAEfJ,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAEV,aADC;AAEPc,YAAAA,OAAO,EAAED,OAAO,CAACE;AAFV,WAAD,CAAR;AAIH,SAPD;AAQAR,QAAAA,CAAC,GAACM,OAAO,CAACE,IAAR,CAAaC,MAAf;AAET;AACF,KAzBH;AA2BH,GAjC2B;AAAA,CAArB;AAmCP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;AAAA,SAAY,UAAAX,QAAQ,EAAG;AAC9CA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAACP;AAAP,KAAD,CAAR;AAEAE,IAAAA,KAAK,CAAC;AACFgB,MAAAA,MAAM,EAAC,MADL;AAGFC,MAAAA,GAAG,EAAC,2DAHF;AAIFP,MAAAA,IAAI,EAAEK;AAJJ,KAAD,CAAL,CAKGR,IALH,CAKQ,UAAAQ,MAAM,EAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACL,IAAnB;AACL,KAPC,EAOCQ,KAPD,CAOO,UAAAC,KAAK,EAAE;AACdf,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,YADC;AAEPU,QAAAA,OAAO,EAAEU,KAAK,CAACC,QAAN,CAAeV;AAFjB,OAAD,CAAR;AAIAE,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACC,QAAN,CAAeV,IAA3B;AACD,KAbC;AAcD,GAjBwB;AAAA,CAAlB","sourcesContent":["import { FETCH_REVIEWS, REVIEWS_LOADING, REVIEWS_LOADED, ADD_REVIEW, ERROR_REVIEW } from './types';\r\nimport axios from 'axios';\r\n\r\nvar x=0,y;\r\n\r\nexport const fetchReviews = () => dispatch => {\r\n    if(x===0){\r\n      dispatch({ type:REVIEWS_LOADING })\r\n    }\r\n    // console.log(\"actions ke andar\")\r\n    // axios.get('http://localhost:5000/api/fetchReviews')\r\n    axios.get('https://react-native-serverjs.herokuapp.com/api/fetchReviews')\r\n      .then(reviews => {\r\n        if(x===0){\r\n        // console.log(reviews.data)\r\n            dispatch({ type:REVIEWS_LOADED })\r\n            dispatch({\r\n                type:FETCH_REVIEWS,\r\n                payload:reviews.data\r\n            })\r\n            x=1;\r\n            y=reviews.data.length;\r\n        }else if(y !== reviews.data.length){\r\n          console.log(y)\r\n                  // axios.get('http://localhost:5000/api/fetchReviews')\r\n                  axios.get('https://react-native-serverjs.herokuapp.com/api/fetchReviews')\r\n                    .then(reviews => {\r\n                      // dispatch({type:POST_LOADED})\r\n                      dispatch({\r\n                        type: FETCH_REVIEWS,\r\n                        payload: reviews.data\r\n                      })\r\n                  })\r\n                  y=reviews.data.length;\r\n                  // console.log('secound')\r\n        }\r\n      })\r\n      \r\n};\r\n\r\nexport const addReview = (review) => dispatch =>{\r\n  dispatch({ type:ADD_REVIEW })\r\n  // console.log(\"inside post\")\r\n  axios({\r\n      method:'post',\r\n      // url:'http://localhost:5000/api/addReview',\r\n      url:'https://react-native-serverjs.herokuapp.com/api/addReview',\r\n      data: review\r\n  }).then(review => {\r\n      console.log(review.data)\r\n}).catch(error=>{\r\n  dispatch({\r\n    type: ERROR_REVIEW,\r\n    payload: error.response.data\r\n  })\r\n  console.log(error.response.data)\r\n})\r\n}\r\n"]},"metadata":{},"sourceType":"module"}